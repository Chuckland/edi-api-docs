Порядок работы с API
=====================

Авторизация
------------

Большинству команд API требуется авторизация. Для этого команды требуют в качестве обязательного параметра так называемый авторизационный токен — массив байтов, однозначно идентифицирующий пользователя. Кроме того, во все методы интеграторского интерфейса требуется передавать так называемый **"ключ разработчика"** — уникальный строковый идентификатор интегратора. Интегратор не должен передавать свой "ключ разработчика" третьим лицам.

Для передачи авторизационной информации с каждым запросом используется стандатрный HTTP-заголовок Authorization. Схема аутентификации, используемая системой EDI.Контур, называется KonturEdiAuth. Для нее определены следующие параметры:

 - **konturediauth_api_client_id** служит для передачи ключа разработчика;
 - **konturediauth_token** служит для передачи авторизационного токена;
 - **konturediauth_login** служит для передачи логина (используется только в момент получения авторизационного токена);
 - **konturediauth_password** служит для передачи пароля (используется только в момент получения авторизационного токена).
 
Значения параметров отделяются от их имен символами '='. Параметры разделяются символами ','. Например:

.. code-block:: c#

	Authorization: KonturEdiAuth konturediauth_api_client_id=testClient-8ee1638deae84c86b8e2069955c2825a,	konturediauth_token=3IU0iPhuhHPZ6lrlumGz4pICEedhQ1XmlMN1Pk8z0DJ51MXkcTi6Q3CODCC4xTMsjPFfhK6XM4kCJ4JJ42hlD499/Ui5WSq6lrPwcdp4IIKswVUwyE0ZiwhlpeOwRjNrvUX1yPrxr0dY8a0w8ePsc1DG8HAlZce8a0hZiWylMqu23d/vfzRFuA==

Таким образом, общая последовательность действий, которые требуется совершить при обращении к функциям интеграторского интерфейса, следующая:

1. Получить авторизационный токен, отправив запрос на сервер и передав ключ разработчика, а также логин и пароль пользователя с помощью команды :doc:`Authenticate <../methods/Authenticate>`.
2. Во все остальные методы передавать кроме ключа разработчика авторизационный токен.

.. important::

	Нет необходимости авторизоваться перед каждым запросом. Авторизационный токен действителен до 12 часов, поэтому кэшируйте его.  При устаревании токена в ответ на запрос сервер возвращает HTTP-код 401 (Unauthorized). В этом случае повторите запрос :doc:`Authenticate <../methods/Authenticate>` и используйте новый токен.


Предварительные настройки
------------------------------------------------------

Перед началом работы с EDI-сообщениями проверьте и сохраните данные, которые потребуются в дальнейшем:

 - **GetAccessiblePartiesInfo**: метод возвращает информацию о доступных пользователю организациях. Идентификатор **partyId** нужен для получения идентификатора ящика организации, из которого вы будете отправлять сообщения и читать события о входящих и исходящих сообщениях
 - **GetMainApiBox**: метод возвращает идентификатор ящика организации **boxId**. Данный идентификатор вы будете использовать в качестве обязательного параметра при отправке сообщений (метод SendMessage) и чтения событий в ящике (метод GetEvents)
 - **GetBoxDocumentsSettings**: метод возвращает информацию о доступных для получения и отправки типов сообщений по каждому из контрагентов организации
 
Полученные данные меняются в исключительных случаях (например, при смене GLN или изменении цепочки сообщений с партнером), поэтому нет необходимости запрашивать их регулярно.

Cхема разового обращения к API
---------------------------------------------

Авторизация (см. раздел Авторизация) с использованием метода Authenticate
	Сохраните полученный авторизационный токен и используйте его в последующих запросах,  в заголовке Authorization.	  
Отправка сообщений
	Отправьте новые сообщения, используя метод SendMessage.
Получение новых событий в ящике с использованием метода GetEvents. 	
	Укажите в  параметре exclusiveEventId идентификатор последнего обработанного события. 	  
Обработка событий	
	  - Получите входящие сообщения методом GetInboxMessage
	  - Обновите текущее состояние исходящих сообщений, на основании данных в соответствующих событиях.
	  - Повторите запрос GetEvents, указав в exclusiveEventId идентификатор последнего обработанного события lastEventId . Если значение lastEventId повторяется - значит лента событий, на данный момент, прочитана до конца.	  
Запись идентификатора lastEventId последнего обработанного события
	Используйте записанное значение в следующей сессии.	